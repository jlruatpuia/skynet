<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="xrPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>