<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="xrPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        J/wfr4vDU1G9eWgAAAAASUVORK5CYII=
</value>
  </data>
</root>